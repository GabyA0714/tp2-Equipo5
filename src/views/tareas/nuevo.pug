extends ../layout

block content
  h2 Nueva Tarea
  a(href="/tareas") Volver
  br
  br

  if error
    p(style="color:red")= error

  form(action="/tareas/nuevo", method="post")

    div
      label(for="area") Área: 
        br
        select#area(name="area", required)
          option(value="" disabled selected) Seleccione un área
          each a in areas
            option(value=a selected=(tarea && tarea.area == a) ? true : false)= a

    div
      label(for="tipoTarea") Tipo (opcional)
      br
      select#tipoTarea(name="")
        option(value="" selected) Seleccione un tipo
      input#otroTipo(type="text" placeholder="Escribe el tipo aquí" style="display:none;")
      input#tipo(type="hidden" name="tipo")

    div
      label(for="estado") Estado
      br
      select#estado(name="estado", required)
        option(value="" disabled selected) Seleccione un estado
        each est in estados 
          option(value=est selected=(tarea && tarea.estado == est) ? true : false)= est

    div
      label(for="prioridad") Prioridad
      br
      select#prioridad(name="prioridad", required)
        option(value="" disabled selected) Seleccione una prioridad
        each pri in prioridades 
          option(value=pri selected=(tarea && tarea.prioridad == pri) ? true : false)= pri  

    div
      label(for="fechaInicio") Fecha Inicio (opcional)
      br
      input#fechaInicio(type="datetime-local", name="fechaInicio", value=(tarea && tarea.fechaInicio) ? new Date(tarea.fechaInicio).toISOString().slice(0,16) : "")


    div
      label(for="fechaFin") Fecha Fin (opcional)
      br
      input#fechaFin(type="datetime-local", name="fechaFin", value=(tarea && tarea.fechaFin) ? new Date(tarea.fechaFin).toISOString().slice(0,16) : "")

    div
      label(for="empleadoId") Empleado (opcional)
      br
      select#empleadoId(name="empleadoId")
        option(value="" selected) Ninguno
        each e in empleados
          option(value=e.id selected=(tarea && tarea.empleadoId == e.id) ? true : false)= "Id: " + e.id + " - " + e.nombre + " " + e.apellido

    div
      label(for="pacienteId") Paciente (opcional)
      br
      select#pacienteId(name="pacienteId")
        option(value="" selected) Ninguno
        each p in pacientes
          option(value=p.id selected=(tarea && tarea.pacienteId == p.id) ? true : false)= "Id: " + p.id + " - " + p.nombre + " " + p.apellido
    div
      label(for="observaciones") Observaciones (opcional)
      br
      textarea#observaciones(name="observaciones", placeholder="Observaciones")= (tarea && tarea.observaciones) ? tarea.observaciones : ""
    br
    button(type="submit") Guardar

  script.
    document.addEventListener('DOMContentLoaded', function() {
        const areaSelect = document.getElementById('area');
        const tipoSelect = document.getElementById('tipoTarea');
        const otroTipoInput = document.getElementById('otroTipo');
        const tipoHiddenInput = document.getElementById('tipo');
        const form = document.querySelector('form');
        
        const tiposValidosPorArea = !{JSON.stringify(tiposValidosPorArea)};

        areaSelect.addEventListener('change', function() {
            const selectedArea = this.value;
            const tipos = tiposValidosPorArea[selectedArea] || [];

            tipoSelect.innerHTML = '<option value=""  selected>Seleccione un tipo</option>';
            otroTipoInput.style.display = 'none';
            otroTipoInput.value = '';
            tipoHiddenInput.value = '';

            tipos.forEach(tipo => {
                const option = document.createElement('option');
                option.value = tipo;
                option.textContent = tipo;
                tipoSelect.appendChild(option);
            });

            const otroOption = document.createElement('option');
            otroOption.value = "Otro";
            otroOption.textContent = "Otro";
            tipoSelect.appendChild(otroOption);

        });
        tipoSelect.addEventListener('change', function() {
            if (this.value === 'Otro') {
                otroTipoInput.style.display = 'block';
                otroTipoInput.required = true;
                tipoHiddenInput.value = '';
            } else {
                otroTipoInput.style.display = 'none';
                otroTipoInput.value = '';
                otroTipoInput.required = false;
                tipoHiddenInput.value = this.value;
            }
        });

        otroTipoInput.addEventListener('input', function() {
            tipoHiddenInput.value = this.value;
        });
    });